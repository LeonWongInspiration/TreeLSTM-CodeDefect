  public void finish() {

    /* NOTE: MemoryManager.pickAllocator() depends on the name of this
       class and method to identify code allocation */
    int n = (next_bundle - 1) * size + next;
    instructions = ArchitectureSpecific.CodeArray.Factory.create(n, false);
    int k = 0;
    for (int i = 0; i < next_bundle; i++) {
      int[] b = bundles.get(i);
      int m = (i == next_bundle - 1 ? next : size);
      for (int j = 0; j < m; j++) {
        instructions.set(k++, b[j]);
      }
    }

    if (VM.runningVM) {
      Memory.sync(Magic.objectAsAddress(instructions),
                  instructions.length() << RegisterConstants.LG_INSTRUCTION_WIDTH);
    }

    bundles = null;
    current_bundle = null;
  }

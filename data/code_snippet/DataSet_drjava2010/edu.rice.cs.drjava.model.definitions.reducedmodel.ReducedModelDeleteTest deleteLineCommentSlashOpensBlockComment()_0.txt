  public void deleteLineCommentSlashOpensBlockComment() {
    model1.insertChar('/');
    model1.insertChar('/');
    model1.insertChar('*');
    model1.insertChar('\n');
    insertGap(model1, 2);
    model1.insertChar('(');
    model1.insertChar('*');
    model1.insertChar('/');
    assertEquals("#0.0", 9, model1.absOffset());
    assertEquals("#0.1", FREE, model1.getStateAtCurrent());
    model1.move(-1);
    assertEquals("#1.0", 8, model1.absOffset());
    assertEquals("#1.1", FREE, model1.getStateAtCurrent());
    assertEquals("#1.2", "/", model1.currentToken().getType());
    model1.move(-1);
    assertEquals("#2.0", 7, model1.absOffset());
    assertEquals("#2.1", FREE, model1.getStateAtCurrent());
    assertEquals("#2.2", "*", model1.currentToken().getType());
    model1.move(-1);
    assertEquals("#3.0", 6, model1.absOffset());
    assertEquals("#3.1", FREE, model1.getStateAtCurrent());
    assertEquals("#3.2", "(", model1.currentToken().getType());
    model1.move(-2);
    assertEquals("#4.0", 4, model1.absOffset());
    assertEquals("#4.1", FREE, model1.getStateAtCurrent());
    assertTrue("#4.2", model1.currentToken().isGap());
    assertEquals("#4.3", 2, model1.currentToken().getSize());
    model1.move(-1);
    assertEquals("#5.0", 3, model1.absOffset());
    assertEquals("#5.1", INSIDE_LINE_COMMENT, model1.getStateAtCurrent());
    assertEquals("#5.2", "\n", model1.currentToken().getType());
    model1.move(-1);
    assertEquals("#6.0", 2, model1.absOffset());
    assertEquals("#6.1", INSIDE_LINE_COMMENT, model1.getStateAtCurrent());
    assertEquals("#6.2", "*", model1.currentToken().getType());
    model1.move(-1);
    assertEquals("#7.0", 1, model1.absOffset());
    assertEquals("#7.1", FREE, model1.getStateAtCurrent());
    model1.delete(-1);
    assertEquals("#8.0", 0, model1.absOffset());
    assertEquals("#8.1", FREE, model1.getStateAtCurrent());
    assertEquals("#8.2", "/*", model1.currentToken().getType());
    model1.move(7);
    assertEquals("#8.0", 7, model1.absOffset());
    assertEquals("#8.1", INSIDE_BLOCK_COMMENT, model1.getStateAtCurrent());
    assertEquals("#8.2", "*/", model1.currentToken().getType());
  }

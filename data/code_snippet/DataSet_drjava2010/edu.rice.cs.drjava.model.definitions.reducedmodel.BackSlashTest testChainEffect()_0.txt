  public void testChainEffect() {
    model0.insertChar('\"');
    model0.insertChar('\\');
    model0.insertChar('\"');
    model0.insertChar('\"');
    model0.insertChar('\"');
    model0.insertChar('\\');
    model0.insertChar('\"');
    model0.insertChar('\"');
    model0.insertChar('\"');
    model0.insertChar('\\');
    model0.insertChar('\"');
    model0.insertChar('\"');
    model0.move(-1);
    assertEquals("#0.0", "\"", model0.currentToken().getType());
    assertTrue("#0.1", model0.currentToken().isClosed());
    model0.move(-2);
    assertEquals("#1.0", "\\\"", model0.currentToken().getType());
    assertEquals("#1.1", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(model0));
    model0.move(-1);
    assertEquals("#1.2", "\"", model0.currentToken().getType());
    assertEquals("#1.3", FREE, stateOfCurrentToken(model0));
    assertTrue("#1.4", model0.currentToken().isOpen());
    model0.move(1);
    model0.insertChar('\\');
    assertEquals("#2.0", "\\\\", model0.currentToken().getType());
    assertEquals("#2.1", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(model0));
    assertEquals("#2.2", 10, model0.absOffset());
    model0.move(-2);
    assertEquals("#2.3", "\"", model0.currentToken().getType());
    assertEquals("#2.4", FREE, stateOfCurrentToken(model0));
    assertTrue("#2.5", model0.currentToken().isOpen());
    model0.move(3);
    assertEquals("#2.6", "\"", model0.currentToken().getType());
    assertEquals("#2.7", FREE, stateOfCurrentToken(model0));
    assertTrue("#2.8", model0.currentToken().isClosed());
    model0.move(-1);
    model0.insertChar('\"');
    assertEquals("#3.0", "\\\"", model0.currentToken().getType());
    assertEquals("#3.1", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(model0));
    assertEquals("#3.2", 11, model0.absOffset());
    model0.move(-2);
    assertEquals("#3.3", "\\\"", model0.currentToken().getType());
    assertEquals("#3.4", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(model0));
    model0.move(4);
    assertEquals("#3.5", "\"", model0.currentToken().getType());
    assertEquals("#3.6", FREE, stateOfCurrentToken(model0));
    assertTrue("#3.7", model0.currentToken().isClosed());
    model0.move(-12);
    model0.delete(1);
    model0.move(-1);
    assertEquals("#4.0", "\"", model0.currentToken().getType());
    assertTrue("#4.1", model0.currentToken().isOpen());
    assertEquals("#4.2", FREE, stateOfCurrentToken(model0));
    model0.move(1);
    assertEquals("#4.3", "\"", model0.currentToken().getType());
    assertTrue("#4.4", model0.currentToken().isClosed());
    assertEquals("#4.5", FREE, stateOfCurrentToken(model0));
    model0.move(1);
    assertEquals("#5.0", "\"", model0.currentToken().getType());
    assertTrue("#5.1", model0.currentToken().isOpen());
    assertEquals("#5.2", FREE, stateOfCurrentToken(model0));
    model0.move(1);
    assertEquals("#5.3", "\"", model0.currentToken().getType());
    assertTrue("#5.4", model0.currentToken().isClosed());
    assertEquals("#5.5", FREE, stateOfCurrentToken(model0));
    model0.move(1);
    assertEquals("#5.6", "\\\"", model0.currentToken().getType());
    assertEquals("#5.7", FREE, stateOfCurrentToken(model0));
    model0.move(2);
    assertEquals("#6.0", "\"", model0.currentToken().getType());
    assertTrue("#6.1", model0.currentToken().isOpen());
    assertEquals("#6.2", FREE, stateOfCurrentToken(model0));
    model0.move(1);
    assertEquals("#6.3", "\"", model0.currentToken().getType());
    assertTrue("#6.4", model0.currentToken().isClosed());
    assertEquals("#6.5", FREE, stateOfCurrentToken(model0));
    model0.move(1);
    assertEquals("#6.6", "\\\"", model0.currentToken().getType());
    assertEquals("#6.7", FREE, stateOfCurrentToken(model0));
    model0.move(2);
    assertEquals("#6.0", "\\\"", model0.currentToken().getType());
    assertEquals("#6.1", FREE, stateOfCurrentToken(model0));
    model0.move(2);
    assertEquals("#6.2", "\"", model0.currentToken().getType());
    assertTrue("#6.3", model0.currentToken().isOpen());
    assertEquals("#6.4", FREE, stateOfCurrentToken(model0));
  }

  public void testInsideQuoteNext() {
    model1.insertChar('\'');
    model1.insertChar('\'');
    model1.move(-1);
    model1.insertChar('\\');
    assertEquals("#0.0", "\\'", model1.currentToken().getType());
    assertEquals("#0.1", INSIDE_SINGLE_QUOTE, stateOfCurrentToken(model1));
    assertEquals("#0.2", 1, model1.getBlockOffset());
    model1.move(1);
    model1.insertChar('\'');
    model1.move(-1);
    assertEquals("#1.0", "\'", model1.currentToken().getType());
    assertEquals("#1.1", FREE, stateOfCurrentToken(model1));
    assertTrue("#1.2", model1.currentToken().isClosed());
    model1.move(1);
    model1.insertChar('\'');
    model1.insertChar('\\');
    model1.move(-1);
    model1.insertChar('\\');
    assertEquals("#2.0", "\\\\", model1.currentToken().getType());
    assertEquals("#2.1", INSIDE_SINGLE_QUOTE, stateOfCurrentToken(model1));
    assertEquals("#2.2", 6, model1.absOffset());
    model1.move(-2);
    model1.insertChar('{');
    model1.move(-1);
    assertEquals("#3.0", "{", model1.currentToken().getType());
    assertEquals("#3.1", FREE, stateOfCurrentToken(model1));
    model1.move(1);
    model1.move(3);
    model1.insertChar('\'');
    model1.move(-1);
    assertEquals("#4.0", "\'", model1.currentToken().getType());
    assertEquals("#4.1", FREE, stateOfCurrentToken(model1));
    assertTrue("#4.2", model1.currentToken().isClosed());
    model1.insertChar('\\');
    assertEquals("#5.0", "\\'", model1.currentToken().getType());
    assertEquals("#5.1", INSIDE_SINGLE_QUOTE, stateOfCurrentToken(model1));
    assertEquals("#5.2", 1, model1.getBlockOffset());
  }

  public void testDeleteBlockCommentMakesLineComment() {
    model1.insertChar('/');
    assertEquals("#0.0", 1, model1.absOffset());
    assertEquals("#0.1", FREE, model1.getStateAtCurrent());
    model1.insertChar('*');
    assertEquals("#1.0", 2, model1.absOffset());
    assertEquals("#1.1", INSIDE_BLOCK_COMMENT, model1.getStateAtCurrent());
    insertGap(model1, 2);
    assertEquals("#2.0", 4, model1.absOffset());
    assertEquals("#2.1", INSIDE_BLOCK_COMMENT, model1.getStateAtCurrent());
    model1.insertChar('*');
    assertEquals("#3.0", 5, model1.absOffset());
    assertEquals("#3.1", INSIDE_BLOCK_COMMENT, model1.getStateAtCurrent());
    model1.insertChar('/');
    assertEquals("#4.0", 6, model1.absOffset());
    assertEquals("#4.1", FREE, model1.getStateAtCurrent());
    insertGap(model1, 1);
    assertEquals("#5.0", 7, model1.absOffset());
    assertEquals("#5.1", FREE, model1.getStateAtCurrent());
    model1.move(-6);
    assertEquals("#6.0", 1, model1.absOffset());
    model1.delete(4);
    assertEquals("#7.0", 1, model1.absOffset());
    assertEquals("#7.3", FREE, model1.getStateAtCurrent());
    model1.move(1);
    assertEquals("#7.0", 2, model1.absOffset());
    assertTrue("#7.1", model1.currentToken().isGap());
    assertEquals("#7.2", 1, model1.currentToken().getSize());
    assertEquals("#7.3", INSIDE_LINE_COMMENT, model1.getStateAtCurrent());
  }

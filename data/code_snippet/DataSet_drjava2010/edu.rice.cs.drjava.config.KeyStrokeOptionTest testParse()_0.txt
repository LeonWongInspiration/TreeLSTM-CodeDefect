  public void testParse() {
    KeyStrokeOption io = new KeyStrokeOption("max_files",null);
    assertEquals(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, InputEvent.CTRL_MASK),
                 io.parse("ctrl ENTER"));
    assertEquals(KeyStrokeOption.NULL_KEYSTROKE,
                 io.parse("<none>"));
    assertEquals(KeyStroke.getKeyStroke(KeyEvent.VK_NUM_LOCK, InputEvent.ALT_MASK | InputEvent.SHIFT_MASK, true),
                 io.parse("alt shift released NUM_LOCK"));
    assertEquals(KeyStroke.getKeyStroke(KeyEvent.VK_COMMA, InputEvent.ALT_MASK | InputEvent.SHIFT_MASK, false),
                 io.parse("alt shift COMMA"));
    assertEquals(KeyStroke.getKeyStroke('%'),
                 io.parse("typed %"));
    assertEquals(KeyStroke.getKeyStroke(Character.valueOf('%'), InputEvent.ALT_MASK | InputEvent.CTRL_MASK),
                 io.parse("ctrl alt typed %"));
    
    try { io.parse("true"); fail(); }
    catch (IllegalArgumentException e) { }
    
    try { io.parse(".33"); fail(); }
    catch (IllegalArgumentException e) { }
    
    try { io.parse("Alt Z"); fail(); }
    catch (IllegalArgumentException e) { }
    
    try { io.parse("ctrl alt shift typed F1"); fail(); }
    catch (IllegalArgumentException e) { }
  }

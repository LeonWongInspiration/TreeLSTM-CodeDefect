  public synchronized void XXXtestBreakpointsAndStepsInNonPublicClasses() throws Exception {
    debug.logStart();
    _log.log("----testBreakpointsAndStepsInNonPublicClasses----");
    final StepTestListener debugListener = new StepTestListener();
    _debugger.addListener(debugListener);

    OpenDefinitionsDocument doc = _startupDebugger("DrJavaDebugClass.java", DEBUG_CLASS);

    _debugger.toggleBreakpoint(doc,DEBUG_CLASS.indexOf("Baz Line 1"), 14,true);
    
    Utilities.clearEventQueue();
    debugListener.assertRegionAddedCount(1);

    synchronized(_notifierLock) {
      interpretIgnoreResult("new DrJavaDebugClass2().baz()");
      while (_pendingNotifies > 0) _notifierLock.wait();
    }


    debugListener.assertCurrThreadResumedCount(0);
    debugListener.assertCurrThreadDiedCount(0);
    assertInteractionsDoesNotContain("Baz Line 1");


    _debugger.toggleBreakpoint(doc, DEBUG_CLASS.indexOf("System.out.println(\"Bar Line 2\")"), 9,true);
    
    Utilities.clearEventQueue();
    debugListener.assertRegionAddedCount(2);

    synchronized(_notifierLock) {
      _asyncStep(Debugger.StepType.STEP_OVER);
      while (_pendingNotifies > 0) _notifierLock.wait();
    }

    debugListener.assertCurrThreadDiedCount(0);
    debugListener.assertBreakpointReachedCount(1);
    assertInteractionsContains("Baz Line 1");
    assertInteractionsDoesNotContain("Bar Line 1");

    synchronized(_notifierLock) {
      _asyncResume();
      while (_pendingNotifies > 0) _notifierLock.wait();
    }
    debugListener.assertCurrThreadDiedCount(0);
    assertInteractionsContains("Bar Line 1");
    assertInteractionsDoesNotContain("Bar Line 2");

    InterpretListener interpretListener = new InterpretListener();
    _model.addListener(interpretListener);
    synchronized(_notifierLock) {
      _asyncResume();
      while (_pendingNotifies > 0) _notifierLock.wait();
    }
    interpretListener.assertInteractionEndCount(1);
    _model.removeListener(interpretListener);

    _log.log("----After second resume:\n" + getInteractionsText());
    debugListener.assertBreakpointReachedCount(2);
    debugListener.assertThreadLocationUpdatedCount(3);
    debugListener.assertCurrThreadSuspendedCount(3);
    assertInteractionsContains("Bar Line 2");

    _shutdownWithoutSuspendedInteraction();
    _debugger.removeListener(debugListener);
    debug.logEnd();
  }

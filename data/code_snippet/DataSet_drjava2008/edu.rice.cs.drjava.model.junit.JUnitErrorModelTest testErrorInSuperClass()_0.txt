  public void testErrorInSuperClass() throws Exception {
    debug.logStart();
    OpenDefinitionsDocument doc1 = setupDocument(TEST_ONE);
    OpenDefinitionsDocument doc2 = setupDocument(TEST_TWO);
    final File file1 = new File(_tempDir, "TestOne.java");
    final File file2 = new File(_tempDir, "TestTwo.java");
    saveFile(doc1, new FileSelector(file1));
    saveFile(doc2, new FileSelector(file2));
    
    JUnitTestListener listener = new JUnitTestListener();
    _model.addListener(listener);
    _model.getCompilerModel().compileAll();
    
    listener.waitCompileDone();
    _log.log("Testing the first document");
    
    _log.log("First document test should be complete");
    listener.assertJUnitStartCount(1);  
    
    _m = _model.getJUnitModel().getJUnitErrorModel();
    
    assertEquals("test case has one error reported", 3, _m.getNumErrors());
    assertTrue("first error should be an error not a warning", !_m.getError(0).isWarning());
    
    assertTrue("it's a junit error", _m.getError(0) instanceof JUnitError);
    
    assertEquals("The first error is on line 5", 3, _m.getError(0).lineNumber());
    assertEquals("The first error is on line 5", 19, _m.getError(1).lineNumber());
    assertEquals("The first error is on line 5", 22, _m.getError(2).lineNumber());
    
    _log.log("Testing the second document");
    listener.runJUnit(doc2);
    _log.log("Second document testing should be complete");
    
    listener.assertJUnitStartCount(2);
    
    assertEquals("test case has one error reported", 3, _m.getNumErrors());
    assertTrue("first error should be an error not a warning", !_m.getError(0).isWarning());
    assertEquals("The first error is on line 5", 3, _m.getError(0).lineNumber());
    assertEquals("The first error is on line 5", 19, _m.getError(1).lineNumber());
    assertEquals("The first error is on line 5", 22, _m.getError(2).lineNumber());
    
    _model.removeListener(listener);
    debug.logEnd();
  }

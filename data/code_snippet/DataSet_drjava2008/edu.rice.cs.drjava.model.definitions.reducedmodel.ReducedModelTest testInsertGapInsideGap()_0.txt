  public void testInsertGapInsideGap() {
    assertFalse(model1._rmb.openBraceImmediatelyLeft());
    assertFalse(model1._rmb.closedBraceImmediatelyLeft());
    insertGap(model1, 3);
    assertTrue("#0.0", model1.atEnd());
    assertFalse(model1._rmb.openBraceImmediatelyLeft());
    assertFalse(model1._rmb.closedBraceImmediatelyLeft());
    model1.move(-3);
    assertTrue("#0.1", model1.currentToken().isGap());
    assertEquals("#0.2", 3, model1.currentToken().getSize());
    assertFalse(model1._rmb.openBraceImmediatelyLeft());
    assertFalse(model1._rmb.closedBraceImmediatelyLeft());
    insertGap(model1, 3);
    assertTrue("#1.1", model1.currentToken().isGap());
    assertEquals("#1.2", 6, model1.currentToken().getSize());
    assertEquals("#1.3", 3, model1.absOffset());
    assertFalse(model1._rmb.openBraceImmediatelyLeft());
    assertFalse(model1._rmb.closedBraceImmediatelyLeft());
    insertGap(model1, 4);
    assertFalse(model1._rmb.openBraceImmediatelyLeft());
    assertFalse(model1._rmb.closedBraceImmediatelyLeft());
    assertTrue("#1.1", model1.currentToken().isGap());
    assertEquals("#1.2", 10, model1.currentToken().getSize());
    assertEquals("#1.3", 7, model1._offset);
  }

  public /* synchronized */ void shutdown() {
    assert EventQueue.isDispatchThread();
    if (isReady()) {
      Runnable command = new Runnable() { public void run() { _model.getInteractionsModel().removeListener(_watchListener); } };
      
      /* Use EventQueue rather than Utilities because we want to defer executing this
       * code after pending events (that may involve the _watchListener). 
       */
      EventQueue.invokeLater(command);
      
      _removeAllDebugInterpreters();
      
      try { _vm.dispose(); }
      catch (VMDisconnectedException vmde) { /* VM was shutdown prematurely */ }
      finally {
        _model.getInteractionsModel().setToDefaultInterpreter();
        _vm = null;
        _suspendedThreads = new RandomAccessStack();
        _eventManager = null;
        _runningThread = null;
        _updateWatches();
      }
    }
  }

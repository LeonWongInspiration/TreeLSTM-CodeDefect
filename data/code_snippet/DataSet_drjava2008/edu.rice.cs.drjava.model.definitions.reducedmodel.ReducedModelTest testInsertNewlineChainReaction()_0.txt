  public void testInsertNewlineChainReaction() {
    model1.insertChar('/');
    model1.insertChar('/');
    model1.insertChar('/');
    model1.insertChar('*');
    model1.move(-1);
    model1.move(-1);
    assertEquals("#0.2", "/", model1.currentToken().getType());
    assertEquals("#0.3", INSIDE_LINE_COMMENT, model1.currentToken().getState());
    model1.move(1);
    assertEquals("#0.0", INSIDE_LINE_COMMENT, model1.getStateAtCurrent());
    assertEquals("#0.1", "*", model1.currentToken().getType());
    assertEquals("#0.4", INSIDE_LINE_COMMENT, model1.currentToken().getState());
    model1.move(1);
    model1.insertChar('\n');
    model1.insertChar('\"');
    model1.insertChar('*');
    model1.insertChar('/');
    model1.move(-1);
    assertEquals("#1.0", INSIDE_DOUBLE_QUOTE, model1.getStateAtCurrent());
    assertEquals("#1.1", "/", model1.currentToken().getType());
    assertEquals("#1.4", INSIDE_DOUBLE_QUOTE, model1.currentToken().getState());
    model1.move(-5);
    assertEquals("#2.1", "/", model1.currentToken().getType());
    model1.insertChar('\n');
    assertEquals("#3.0", FREE, model1.getStateAtCurrent());
    assertEquals("#3.4", FREE, model1.currentToken().getState());
    model1.move(1);
    assertEquals("#3.1", "/*", model1.currentToken().getType());
    model1.move(2);
    assertEquals("#4.0", INSIDE_BLOCK_COMMENT, model1.getStateAtCurrent());
    assertEquals("#4.1", "\"", model1.currentToken().getType());
    assertEquals("#4.4", INSIDE_BLOCK_COMMENT, model1.currentToken().getState());
    model1.move(1);
    assertEquals("#4.6", "*/", model1.currentToken().getType());
  }

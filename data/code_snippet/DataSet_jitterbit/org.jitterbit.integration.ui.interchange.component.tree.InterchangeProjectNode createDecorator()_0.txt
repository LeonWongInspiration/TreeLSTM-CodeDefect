    protected ITreeNodeDecorator<IIntegrationTreeNodeDecor> createDecorator() {
        return new DefaultIntegrationTreeNodeDecorator(this) {

            @Override
            protected StyleSheetTextClass getStyleSheetClass(IIntegrationTreeNodeDecor decor) {
                return decor.isDecoratingDeployDirtyNodes() ?
                                IntegrationUiStyleSheet.TreeDeployDirtyRootText :
                                    IntegrationUiStyleSheet.TreeRootText;
            }

            @Override
            protected String getToolTip(IIntegrationTreeNodeDecor decor) {
                return new ProjectToolTip(getDataObject()).get();
            }
        };
    }

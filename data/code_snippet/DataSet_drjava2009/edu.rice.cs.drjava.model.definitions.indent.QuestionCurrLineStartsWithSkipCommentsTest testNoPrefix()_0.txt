  public void testNoPrefix() throws BadLocationException {
    _text =
      "class A                 \n" + /*   0 */
      "{                       \n" + /*  25 */
      "    int method1         \n" + /*  75 */
      "    /**                 \n" + /* 100 */
      "     * javadoc comment  \n" + /* 125 */
      "     */                 \n" + /* 150 */
      "    int method()        \n" + /* 175 */
      "    {                   \n" + /* 200 */
      "    }                   \n" + /* 225 */
      "    /* multi line       \n" + /* 250 */
      "       comment          \n" + /* 275 */
      "    boolean method()    \n" + /* 300 */
      "    {                   \n" + /* 325 */
      "    }                   \n" + /* 350 */
      "    */                  \n" + /* 375 */
      "}";                           /* 400 */

    _setDocText(_text);

    IndentRuleQuestion rule = new QuestionCurrLineStartsWithSkipComments("", null, null);

    
    assertTrue("At 0.", rule.testApplyRule(_doc, 0, Indenter.IndentReason.OTHER));
    assertTrue("At start of block.", rule.testApplyRule(_doc, 25, Indenter.IndentReason.OTHER));
    assertTrue("START starts one-line comment.", ! rule.testApplyRule(_doc, 54, Indenter.IndentReason.OTHER));
    assertTrue("START starts one-line comment.", ! rule.testApplyRule(_doc, 60, Indenter.IndentReason.OTHER));
    assertTrue("START starts javadoc comment.", ! rule.testApplyRule(_doc, 104, Indenter.IndentReason.OTHER));
    assertTrue("START starts javadoc comment.", ! rule.testApplyRule(_doc, 110, Indenter.IndentReason.OTHER));
    assertTrue("Line inside javadoc comment.", ! rule.testApplyRule(_doc, 130, Indenter.IndentReason.OTHER));
    assertTrue("Line closes javadoc comment.", ! rule.testApplyRule(_doc, 150, Indenter.IndentReason.OTHER));
    assertTrue("START is free.", rule.testApplyRule(_doc, 180, Indenter.IndentReason.OTHER));
    assertTrue("START is free.", rule.testApplyRule(_doc, 230, Indenter.IndentReason.OTHER));
    assertTrue("START starts multi-line comment.", ! rule.testApplyRule(_doc, 260, Indenter.IndentReason.OTHER));
    assertTrue("Line inside multi-line comment.", ! rule.testApplyRule(_doc, 275, Indenter.IndentReason.OTHER));
    assertTrue("Line inside multi-line comment.", ! rule.testApplyRule(_doc, 300, Indenter.IndentReason.OTHER));
    assertTrue("Line closes multi-line comment.", ! rule.testApplyRule(_doc, 399, Indenter.IndentReason.OTHER));
    assertTrue("START is free.", rule.testApplyRule(_doc, 400, Indenter.IndentReason.OTHER));
    assertTrue("At end of document.", rule.testApplyRule(_doc, 401, Indenter.IndentReason.OTHER));
  }

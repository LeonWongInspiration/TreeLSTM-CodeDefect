  private void _setupDebugger() {
    _jvm.setDebugModel(_debugger.callback());
    
    getBreakpointManager().addListener(new RegionManagerListener<Breakpoint>() {
      public void regionAdded(final Breakpoint bp) { setProjectChanged(true); }
      public void regionChanged(final Breakpoint bp) { setProjectChanged(true); }
      public void regionRemoved(final Breakpoint bp) { 
        try { getDebugger().removeBreakpoint(bp); } 
        catch(DebugException de) {
          /* just ignore it */
        }
        setProjectChanged(true);
      }
    });
    getBookmarkManager().addListener(new RegionManagerListener<MovingDocumentRegion>() {
      public void regionAdded(MovingDocumentRegion r) { setProjectChanged(true); }
      public void regionChanged(MovingDocumentRegion r) { setProjectChanged(true); }
      public void regionRemoved(MovingDocumentRegion r) { setProjectChanged(true); }
    });
    
    _debugger.addListener(new DebugListener() {
      public void watchSet(final DebugWatchData w) { setProjectChanged(true); }
      public void watchRemoved(final DebugWatchData w) { setProjectChanged(true); }    
      
      public void regionAdded(final Breakpoint bp) { }
      public void regionChanged(final Breakpoint bp) { }
      public void regionRemoved(final Breakpoint bp) { }
      public void debuggerStarted() { }
      public void debuggerShutdown() { }
      public void threadLocationUpdated(OpenDefinitionsDocument doc, int lineNumber, boolean shouldHighlight) { }
      public void breakpointReached(final Breakpoint bp) { }
      public void stepRequested() { }
      public void currThreadSuspended() { }
      public void currThreadResumed() { }
      public void threadStarted() { }
      public void currThreadDied() { }
      public void nonCurrThreadDied() {  }
      public void currThreadSet(DebugThreadData thread) { }
    });
  }

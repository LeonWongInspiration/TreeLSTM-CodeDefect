  public void testGetOffsetAndLength() {
    String test = "123456789\n123456789\n123456789\n";
    
    Pair<Integer, Integer> oAndL = StringOps.getOffsetAndLength(test, 1, 1, 1, 9);
    assertEquals("testGetOffsetAndLength- offSet:", Integer.valueOf(0), oAndL.first());
    assertEquals("testGetOffsetAndLength- length:", Integer.valueOf(9), oAndL.second());
    
    oAndL = StringOps.getOffsetAndLength(test, 1, 1, 2, 3);
    assertEquals("testGetOffsetAndLength- offSet:", Integer.valueOf(0), oAndL.first());
    assertEquals("testGetOffsetAndLength- length:", Integer.valueOf(13), oAndL.second());
    
    oAndL = StringOps.getOffsetAndLength(test, 1, 5, 2, 3);
    assertEquals("testGetOffsetAndLength- offSet:", Integer.valueOf(4), oAndL.first());
    assertEquals("testGetOffsetAndLength- length:", Integer.valueOf(9), oAndL.second());
    
    oAndL = StringOps.getOffsetAndLength(test, 1, 1, 1, 1);
    assertEquals("testGetOffsetAndLength- offSet:", Integer.valueOf(0), oAndL.first());
    assertEquals("testGetOffsetAndLength- length:", Integer.valueOf(1), oAndL.second());
    
    oAndL = StringOps.getOffsetAndLength(test, 3, 5, 3, 5);
    assertEquals("testGetOffsetAndLength- offSet:", Integer.valueOf(24), oAndL.first());
    assertEquals("testGetOffsetAndLength- length:", Integer.valueOf(1), oAndL.second());
    
    oAndL = StringOps.getOffsetAndLength(test, 2, 3, 3, 6);
    assertEquals("testGetOffsetAndLength- offSet:", Integer.valueOf(12), oAndL.first());
    assertEquals("testGetOffsetAndLength- length:", Integer.valueOf(14), oAndL.second());
    
    try {
      StringOps.getOffsetAndLength(test, 3, 2, 2, 3);
      fail("Should not have been able to compute offset where startRow > endRow");
    }
    catch (IllegalArgumentException ex) {
    }
    
    try {
      StringOps.getOffsetAndLength(test, 2, 4, 2, 3);
      fail("Should not have been able to compute offset where start > end");
    }
    catch (IllegalArgumentException ex) {
    }
    
    try {
      StringOps.getOffsetAndLength(test, 4, 4, 5, 5);
      fail("Should not have been able to compute offset where the\n" +
           "given coordinates are not contained within the string");
    }
    catch (IllegalArgumentException ex) {
    }
    
    try {
      StringOps.getOffsetAndLength(test, 3, 4, 3, 12);
      fail("Should not have been able to compute offset where the\n" +
           "given coordinates are not contained within the string");
    }
    catch (IllegalArgumentException ex) {
    }
    
    try {
      StringOps.getOffsetAndLength(test, 2, 15, 3, 1);
      fail("Should not have been able to compute offset where the\n" +
           "given coordinates are not contained within the string");
    }
    catch (IllegalArgumentException ex) {
    }
  }

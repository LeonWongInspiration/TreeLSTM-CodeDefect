  public void testInsertQuoteToQuoteBlock() {
    model1.insertChar('\"');
    insertGap(model1, 2);
    model1.insertChar('/');
    insertGap(model1, 2);
    model1.insertChar('\"');
    model1.move(-3);
    model1.insertChar('\"');
    model1.move(-1);
    assertEquals("#3.1", "\"", model1.currentToken().getType());
    assertEquals("#3.5", FREE, model1.currentToken().getState());
    model1.move(1);
    assertEquals("#3.0", true, model1.currentToken().isGap());
    assertEquals("#3.4", FREE, model1.currentToken().getState());
    assertEquals("#3.6", FREE, model1.getStateAtCurrent());
    model1.move(2);
    assertEquals("#3.2", "\"", model1.currentToken().getType());
    assertEquals("#3.3", FREE, model1.currentToken().getState());
    model1.move(-6);
    assertEquals("#4.1", true, model1.currentToken().isGap());
    assertEquals("#4.5", INSIDE_DOUBLE_QUOTE, model1.currentToken().getState());
    model1.move(2);
    assertEquals("#4.0", "/", model1.currentToken().getType());
    assertEquals("#4.4", INSIDE_DOUBLE_QUOTE, model1.currentToken().getState());
    assertEquals("#4.6", INSIDE_DOUBLE_QUOTE, model1.getStateAtCurrent());
    model1.move(1);
    assertEquals("#4.2", "\"", model1.currentToken().getType());
    assertEquals("#4.3", FREE, model1.currentToken().getState());
    model1.move(-1);
    model1.insertChar('\n');
    model1.move(-1);
    assertEquals("#5.5", FREE, model1.currentToken().getState());
    model1.move(1);
    assertEquals("#5.4", FREE, model1.currentToken().getState());
    assertEquals("#5.6", FREE, model1.getStateAtCurrent());
    model1.move(1);
    assertEquals("#5.3", FREE, model1.currentToken().getState());
    model1.move(1);
    assertEquals("#5.7", INSIDE_DOUBLE_QUOTE, model1.currentToken().getState());
    assertEquals("#5.8", true, model1.currentToken().isGap());
  }

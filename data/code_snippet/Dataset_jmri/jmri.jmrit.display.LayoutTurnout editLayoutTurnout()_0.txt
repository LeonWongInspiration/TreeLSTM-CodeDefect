	protected void editLayoutTurnout() {
		if (editOpen) {
			editLayoutTurnoutFrame.setVisible(true);
			return;
		}
		if (editLayoutTurnoutFrame == null) {
            editLayoutTurnoutFrame = new JmriJFrame( rb.getString("EditTurnout") );
            editLayoutTurnoutFrame.addHelpMenu("package.jmri.jmrit.display.EditLayoutTurnout", true);
            editLayoutTurnoutFrame.setLocation(50,30);
            Container contentPane = editLayoutTurnoutFrame.getContentPane();        
            contentPane.setLayout(new BoxLayout(contentPane, BoxLayout.Y_AXIS));
            JPanel panel1 = new JPanel(); 
            panel1.setLayout(new FlowLayout());
			JLabel turnoutNameLabel = new JLabel( rb.getString("Turnout")+" "+rb.getString("Name") );
            panel1.add(turnoutNameLabel);
            panel1.add(turnoutNameField);
            turnoutNameField.setToolTipText( rb.getString("EditTurnoutNameHint") );
            contentPane.add(panel1);
			if ( (type != DOUBLE_XOVER) && (type != RH_XOVER) && (type != LH_XOVER) ) { 
				JPanel panel3 = new JPanel(); 
				panel3.setLayout(new FlowLayout());
				stateBox.removeAllItems();
				stateBox.addItem( InstanceManager.turnoutManagerInstance().getClosedText() );
				turnoutClosedIndex = 0;
				stateBox.addItem( InstanceManager.turnoutManagerInstance().getThrownText() );
				turnoutThrownIndex = 1;
				stateBox.setToolTipText(rb.getString("StateToolTip"));
				panel3.add (new JLabel(rb.getString("ContinuingState")));
				panel3.add (stateBox);
				contentPane.add(panel3);
			}
            JPanel panel2 = new JPanel(); 
            panel2.setLayout(new FlowLayout());
			JLabel blockNameLabel = new JLabel( rb.getString("BlockID"));
            panel2.add(blockNameLabel);
            panel2.add(blockNameField);
            blockNameField.setToolTipText( rb.getString("EditBlockNameHint") );
            contentPane.add(panel2);
			if ( (type == DOUBLE_XOVER) || (type == RH_XOVER) || (type == LH_XOVER) ) { 
				JPanel panel21 = new JPanel(); 
				panel21.setLayout(new FlowLayout());
				JLabel blockBNameLabel = new JLabel( rb.getString("Block2ID"));
				panel21.add(blockBNameLabel);
				panel21.add(blockBNameField);
				blockBNameField.setToolTipText( rb.getString("EditBlockBNameHint") );
				contentPane.add(panel21);
				JPanel panel22 = new JPanel(); 
				panel22.setLayout(new FlowLayout());
				JLabel blockCNameLabel = new JLabel( rb.getString("Block3ID"));
				panel22.add(blockCNameLabel);
				panel22.add(blockCNameField);
				blockCNameField.setToolTipText( rb.getString("EditBlockCNameHint") );
				contentPane.add(panel22);
				JPanel panel23 = new JPanel(); 
				panel23.setLayout(new FlowLayout());
				JLabel blockDNameLabel = new JLabel( rb.getString("Block4ID"));
				panel23.add(blockDNameLabel);
				panel23.add(blockDNameField);
				blockDNameField.setToolTipText( rb.getString("EditBlockDNameHint") );
				contentPane.add(panel23);
			}
            JPanel panel5 = new JPanel();
            panel5.setLayout(new FlowLayout());
            panel5.add(turnoutEditBlock = new JButton(rb.getString("EditBlock")));
            turnoutEditBlock.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    turnoutEditBlockPressed(e);
                }
            });
            turnoutEditBlock.setToolTipText( rb.getString("EditBlockHint") );
            panel5.add(turnoutEditDone = new JButton(rb.getString("Done")));
            turnoutEditDone.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    turnoutEditDonePressed(e);
                }
            });
            turnoutEditDone.setToolTipText( rb.getString("DoneHint") );
            panel5.add(turnoutEditCancel = new JButton(rb.getString("Cancel")));
            turnoutEditCancel.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    turnoutEditCancelPressed(e);
                }
            });
            turnoutEditCancel.setToolTipText( rb.getString("CancelHint") );
            contentPane.add(panel5);
			if ( (type == DOUBLE_XOVER) || (type == RH_XOVER) || (type == LH_XOVER) ) {
				JPanel panel6 = new JPanel();
				panel6.setLayout(new FlowLayout());
				panel6.add(turnoutEditBlockB = new JButton(rb.getString("EditBlock2")));
				turnoutEditBlockB.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent e) {
						turnoutEditBlockBPressed(e);
					}
				});
				turnoutEditBlockB.setToolTipText( rb.getString("EditBlockBHint") );
				panel6.add(turnoutEditBlockC = new JButton(rb.getString("EditBlock3")));
				turnoutEditBlockC.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent e) {
						turnoutEditBlockCPressed(e);
					}
				});
				turnoutEditBlockC.setToolTipText( rb.getString("EditBlockCHint") );
				panel6.add(turnoutEditBlockD = new JButton(rb.getString("EditBlock4")));
				turnoutEditBlockD.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent e) {
						turnoutEditBlockDPressed(e);
					}
				});
				turnoutEditBlockD.setToolTipText( rb.getString("EditBlockDHint") );
				contentPane.add(panel6);
			}
		}
		blockNameField.setText(blockName);
		if ( (type == DOUBLE_XOVER) || (type == RH_XOVER) || (type == LH_XOVER) ) {
			blockBNameField.setText(blockBName);
			blockCNameField.setText(blockCName);
			blockDNameField.setText(blockDName);
		}	
		turnoutNameField.setText(turnoutName);
		if ( (type != DOUBLE_XOVER) && (type != RH_XOVER) && (type != LH_XOVER) ) {
			if (continuingSense==Turnout.CLOSED) {
				stateBox.setSelectedIndex(turnoutClosedIndex);
			}
			else {
				stateBox.setSelectedIndex(turnoutThrownIndex);
			}
		}
		editLayoutTurnoutFrame.addWindowListener(new java.awt.event.WindowAdapter() {
				public void windowClosing(java.awt.event.WindowEvent e) {
					turnoutEditCancelPressed(null);
				}
			});
        editLayoutTurnoutFrame.pack();
        editLayoutTurnoutFrame.setVisible(true);		
		editOpen = true;
		needsBlockUpdate = false;
	}	

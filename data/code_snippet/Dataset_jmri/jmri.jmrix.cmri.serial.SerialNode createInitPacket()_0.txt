    public AbstractMRMessage createInitPacket() {
        int nInitBytes = 4;
        byte[] initBytes = new byte [20];
        int code = 0;
        else if (nodeType==USIC_SUSIC) {
        }
        int firstByte = transmissionDelay / 256;
        int secondByte = transmissionDelay - ( firstByte*256 );
        if (firstByte>255) firstByte = 255;
        initBytes[1] = (byte)firstByte;
        initBytes[2] = (byte)secondByte;

        if (nodeType==SMINI) {
            initBytes[3] = (byte)num2LSearchLights;
            if (num2LSearchLights>0) {
                for (int i=0,j=0;i<6;i++,j+=8) {
                    code = locSearchLightBits[j];
                    code = code + (locSearchLightBits[j+1]*2);
                    code = code + (locSearchLightBits[j+2]*4);
                    code = code + (locSearchLightBits[j+3]*8);
                    code = code + (locSearchLightBits[j+4]*16);
                    code = code + (locSearchLightBits[j+5]*32);
                    code = code + (locSearchLightBits[j+6]*64);
                    code = code + (locSearchLightBits[j+7]*128);
                    initBytes[nInitBytes] = (byte)code;
                    nInitBytes ++;
                }
            }
        }
        else if (nodeType==USIC_SUSIC) {
            int numCards = numInputCards() + numOutputCards();
            int numFours = numCards/4;
            initBytes[3] = (byte)numFours;
            for (int i=0,j=0;i<numFours;i++,j+=4) {
                code = cardTypeLocation[j];
                code = code + (cardTypeLocation[j+1] * 4);
                code = code + (cardTypeLocation[j+2] * 16);
                code = code + (cardTypeLocation[j+3] * 64);
                initBytes[nInitBytes] = (byte)code;
                nInitBytes ++;
            }
        }

        int nDLE = 0;
        for (int i=1; i<nInitBytes; i++) {
            if ( (initBytes[i]==2) || (initBytes[i]==3) || (initBytes[i]==16) )
                nDLE ++;
        }

        SerialMessage m = new SerialMessage(nInitBytes + nDLE + 2);
        int k = 2;
        for (int i=0; i<nInitBytes; i++) {
            if ( (initBytes[i]==2) || (initBytes[i]==3) || (initBytes[i]==16) ) {
                k ++;
            }
            m.setElement(k, initBytes[i]);
            k ++;
        }
        return m;
    }

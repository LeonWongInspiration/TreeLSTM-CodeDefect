	public boolean checkLoopCondition() {
		if (!mBusy) {
			loopGremlins = "";
			numGremlins = 0;
			assembleListenerList();
			if (mNumListeners>0) {
				boolean[] conflictFound = new boolean[MAX_LISTENERS];
				for (int k = 0; k<mNumListeners; k++) {
					conflictFound[k] = false;
				}
				Conditional c = null;
				int[] opt = {0,0};
				int[] delay = {0,0};
				int[] type = {0,0};
				String[] name = {" "," "};
				int[] data = {0,0};
				String[] dataString = {" "," "};
				for (int i = 0;i<mNumConditionals;i++) {
					c = InstanceManager.conditionalManagerInstance().
										getBySystemName(mConditionalSystemNames[i]);
					if (c!=null) {
						c.getAction(opt,delay,type,name,data,dataString);
						for (int j = 0; j<2; j++) {
							String sName = "";
							String uName = "";
							switch (type[j]) {
								case Conditional.ACTION_NONE:
									break;
								case Conditional.ACTION_SET_TURNOUT:
								case Conditional.ACTION_DELAYED_TURNOUT:
								case Conditional.ACTION_RESET_DELAYED_TURNOUT:
									Turnout t = InstanceManager.turnoutManagerInstance().
												provideTurnout(name[j]);
									if (t!=null) {
										sName = t.getSystemName();
										uName = t.getUserName();
										for (int k = 0; k<mNumListeners; k++) {
											if ( (!conflictFound[k]) && 
												(mListenerType[k] == LISTENER_TYPE_TURNOUT) ) {
												if ( (mListenerName[k].equals(sName)) ||
														(mListenerName[k].equals(uName)) ) {
													addGremlin(sName,uName);
													conflictFound[k] = true;
												}
											}
										}
									}
									break;
								case Conditional.ACTION_SET_SIGNAL_APPEARANCE:
								case Conditional.ACTION_SET_SIGNAL_HELD:
								case Conditional.ACTION_CLEAR_SIGNAL_HELD:
								case Conditional.ACTION_SET_SIGNAL_DARK:
								case Conditional.ACTION_SET_SIGNAL_LIT:
									SignalHead h = InstanceManager.signalHeadManagerInstance().
													getSignalHead(name[j]);
									if (h!=null) {
										sName = h.getSystemName();
										uName = h.getUserName();
										for (int k = 0; k<mNumListeners; k++) {
											if ( (!conflictFound[k]) && 
												(mListenerType[k] == LISTENER_TYPE_SIGNAL) ) {
												if ( (mListenerName[k].equals(sName)) ||
														(mListenerName[k].equals(uName)) ) {
													addGremlin(sName,uName);
													conflictFound[k] = true;
												}
											}
										}
									}
									break;
								case Conditional.ACTION_SET_SENSOR:
								case Conditional.ACTION_DELAYED_SENSOR:
								case Conditional.ACTION_RESET_DELAYED_SENSOR:
								case Conditional.ACTION_CANCEL_SENSOR_TIMERS:
									Sensor s = InstanceManager.sensorManagerInstance().
												provideSensor(name[j]);
									if (s!=null) {
										sName = s.getSystemName();
										uName = s.getUserName();
										for (int k = 0; k<mNumListeners; k++) {
											if ( (!conflictFound[k]) && 
												(mListenerType[k] == LISTENER_TYPE_SENSOR) ) {
												if ( (mListenerName[k].equals(sName)) ||
														(mListenerName[k].equals(uName)) ) {
													addGremlin(sName,uName);
													conflictFound[k] = true;
												}
											}
										}
									}
									break;
								case Conditional.ACTION_SET_LIGHT:
									Light lgt = InstanceManager.lightManagerInstance().
													getLight(name[j]);
									if (lgt!=null) {
										sName = lgt.getSystemName();
										uName = lgt.getUserName();
										for (int k = 0; k<mNumListeners; k++) {
											if ( (!conflictFound[k]) && 
												(mListenerType[k] == LISTENER_TYPE_LIGHT) ) {
												if ( (mListenerName[k].equals(sName)) ||
														(mListenerName[k].equals(uName)) ) {
													addGremlin(sName,uName);
													conflictFound[k] = true;
												}
											}
										}
									}
									break;
								case Conditional.ACTION_SET_MEMORY:
									Memory m = InstanceManager.memoryManagerInstance().
												provideMemory(name[j]);
									if (m!=null) {
										sName = m.getSystemName();
										uName = m.getUserName();
										for (int k = 0; k<mNumListeners; k++) {
											if ( (!conflictFound[k]) && 
												(mListenerType[k] == LISTENER_TYPE_MEMORY) ) {
												if ( (mListenerName[k].equals(sName)) ||
														(mListenerName[k].equals(uName)) ) {
													addGremlin(sName,uName);
													conflictFound[k] = true;
												}
											}
										}
									}
									break;
								default:
									break;
							}							
						}
					}
				}
				if (numGremlins>0) return (true);
			}
		}
		return (false);
	}

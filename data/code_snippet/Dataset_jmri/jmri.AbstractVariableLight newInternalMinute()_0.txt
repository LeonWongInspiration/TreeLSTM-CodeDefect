    private void newInternalMinute() {
    	double origCurrent = mCurrentIntensity;
    	int origState = mState;
    	if ((Math.abs(mCurrentIntensity - mTransitionTargetIntensity) > 0.001) && (mTransitionDuration > 0)) {
    		if (log.isDebugEnabled()) {
    			log.debug("before Target: " + mTransitionTargetIntensity + " Current: " + mCurrentIntensity);
    		}
    		Date now = internalClock.getTime();
    		int steps = SerialTrafficController.instance().maxX10DimStep();
        	double stepsPerMinute = steps / mTransitionDuration;
        	double minutesPerStep = 1 / stepsPerMinute;
        	double timeUntilMinute = now.getSeconds() / 60.0;
        	double absIntensityDiff = Math.abs(mTransitionTargetIntensity - mCurrentIntensity);
        	double stepSize = 1 / (double)steps;
        	double stepsNeeded = absIntensityDiff / stepSize;
        	double intensityDiffPerMinute = stepSize * stepsPerMinute;
			if (mTransitionTargetIntensity > mCurrentIntensity) {
				mCurrentIntensity = mCurrentIntensity + intensityDiffPerMinute;
				if (mCurrentIntensity >= mTransitionTargetIntensity) {
					mCurrentIntensity = mTransitionTargetIntensity;
					if (mCurrentIntensity >= getMaxIntensity())
					    mState = ON;
					else
					    mState = INTERMEDIATE;
				}
			} else {
				mCurrentIntensity = mCurrentIntensity - intensityDiffPerMinute;
				if (mCurrentIntensity <= mTransitionTargetIntensity) {
					mCurrentIntensity = mTransitionTargetIntensity;
					mCurrentIntensity = mTransitionTargetIntensity;
					if (mCurrentIntensity <= getMinIntensity())
					    mState = OFF;
					else
					    mState = INTERMEDIATE;
				}
			}
			
            sendIntensity(mCurrentIntensity);

    		if (log.isDebugEnabled()){
        		log.debug("after Target: " + mTransitionTargetIntensity + " Current: " + mCurrentIntensity);
    		}
    	}
    	if (origCurrent != mCurrentIntensity) {
            firePropertyChange("CurrentIntensity", new Double(origCurrent), new Double(mCurrentIntensity));
    		if (log.isDebugEnabled()){
        		log.debug("firePropertyChange intensity " + origCurrent + " -> " + mCurrentIntensity);
    		}
    	}
    	if (origState != mState) {
            firePropertyChange("KnownState", new Integer(origState), new Integer(mState));
    		if (log.isDebugEnabled()){
        		log.debug("firePropertyChange intensity " + origCurrent + " -> " + mCurrentIntensity);
    		}
    	}
    }

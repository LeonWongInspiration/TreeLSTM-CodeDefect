    public void defineIO() {

        try {
            Class cs = Class.forName("org.python.core.PySystemState");
            java.lang.reflect.Method initialize =
                        cs.getMethod("initialize",null);
            initialize.invoke(null, null);

            interp = Class.forName("org.python.util.PythonInterpreter").newInstance();

            java.lang.reflect.Method set =
                        interp.getClass().getMethod("set", new Class[]{String.class, Object.class});
            set.invoke(interp, new Object[]{"self", this});

            set.invoke(interp, new Object[]{"inputs", inputs});
            set.invoke(interp, new Object[]{"outputs", outputs});

            set.invoke(interp, new Object[]{"turnouts", InstanceManager.turnoutManagerInstance()});
            set.invoke(interp, new Object[]{"sensors", InstanceManager.sensorManagerInstance()});
            set.invoke(interp, new Object[]{"signals", InstanceManager.signalHeadManagerInstance()});
            set.invoke(interp, new Object[]{"dcc", InstanceManager.commandStationInstance()});

            set.invoke(interp, new Object[]{"CLOSED", new Integer(jmri.Turnout.CLOSED)});
            set.invoke(interp, new Object[]{"THROWN", new Integer(jmri.Turnout.THROWN)});
            set.invoke(interp, new Object[]{"ACTIVE", new Integer(jmri.Sensor.ACTIVE)});
            set.invoke(interp, new Object[]{"INACTIVE", new Integer(jmri.Sensor.INACTIVE)});
            set.invoke(interp, new Object[]{"GREEN", new Integer(jmri.SignalHead.GREEN)});
            set.invoke(interp, new Object[]{"YELLOW", new Integer(jmri.SignalHead.YELLOW)});
            set.invoke(interp, new Object[]{"RED", new Integer(jmri.SignalHead.RED)});

            exec = interp.getClass().getMethod("exec", new Class[]{String.class});

            exec.invoke(interp, new Object[]{"execfile(\""+filename+"\")"});

            exec.invoke(interp, new Object[]{"defineIO()"});

            System.out.println("inputs[0]: "+inputs[0]);

        } catch (Exception e) {
            log.error("Exception creating jython system objects: "+e);
            e.printStackTrace();
        }
    }
